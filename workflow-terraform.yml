name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use o shell Bash independentemente do executor GitHub Actions ser ubuntu-latest, macos-latest ou windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Faça check-out do repositório para o executar o GitHub Actions
    - name: Checkout
      uses: actions/checkout@v2

    # Instale a versão mais recente do Terraform CLI e configure o arquivo de configuração Terraform CLI com um token de API de usuário do Terraform Cloud
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Inicialize um diretório de trabalho novo ou existente do Terraform criando arquivos iniciais, carregando qualquer estado remoto, baixando módulos, etc.
    - name: Terraform Init
      run: terraform init

    # Verifica se todos os arquivos de configuração do Terraform seguem um formato canônico
    - name: Terraform Format
      run: terraform fmt -check

    # Gera um plano de execução para Terraform
    - name: Terraform Plan
      run: terraform plan

      # No push do main, construa ou altere a infraestrutura de acordo com os arquivos de configuração do Terraform
      # Nota: É recomendado configurar uma verificação de status "estrita" necessária em seu repositório para "Terraform Cloud". Consulte a documentação sobre verificações de status "estritas" exigidas para obter mais informações: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
